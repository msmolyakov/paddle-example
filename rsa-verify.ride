{-# STDLIB_VERSION 3 #-}
{-# CONTENT_TYPE DAPP #-}
{-# SCRIPT_TYPE ACCOUNT #-}

@Callable(inv)
func rsa(pubKey: ByteVector,
        # none: ByteVector,
        md5: ByteVector, s1: ByteVector,
        s224: ByteVector, s256: ByteVector, s384: ByteVector, s512: ByteVector,
        s3224: ByteVector, s3256: ByteVector, s3384: ByteVector, s3512: ByteVector) = {
    let val = this.getBinaryValue("1")
    let source = val + val

    WriteSet([DataEntry("result",
        # rsaVerify(NOALG, source, none, pubKey)
        # &&
        rsaVerify(MD5, source, md5, pubKey)
        && rsaVerify(SHA1, source, s1, pubKey)
        && rsaVerify(SHA224, source, s224, pubKey)
        && rsaVerify(SHA256, source, s256, pubKey)
        && rsaVerify(SHA384, source, s384, pubKey)
        && rsaVerify(SHA512, source, s512, pubKey)
        && rsaVerify(SHA3224, source, s3224, pubKey)
        && rsaVerify(SHA3256, source, s3256, pubKey)
        && rsaVerify(SHA3384, source, s3384, pubKey)
        && rsaVerify(SHA3512, source, s3512, pubKey)
    )])
}
